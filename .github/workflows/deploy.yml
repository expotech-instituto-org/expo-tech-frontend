name: Deploy Frontend (Zero Downtime)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      DEPLOY_PATH: /home/expo_tech/frontend

    steps:
      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Images
        run: |
          IMAGE_BLUE=${{ secrets.DOCKERHUB_USERNAME }}/expo_tech_front:blue
          IMAGE_GREEN=${{ secrets.DOCKERHUB_USERNAME }}/expo_tech_front:green

          # Build e push Blue
          docker build -t $IMAGE_BLUE .
          docker push $IMAGE_BLUE

          # Build e push Green
          docker build -t $IMAGE_GREEN .
          docker push $IMAGE_GREEN

      # 4️⃣ Copia docker-compose.yml para a VM
      - name: Copy docker-compose.yml to VM
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          port: 22
          source: "docker-compose.yml"
          target: "${{ env.DEPLOY_PATH }}/"

      # 5️⃣ SSH e Deploy
      - name: SSH and Deploy
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          port: 22
          script: |
            set -e
            cd $DEPLOY_PATH

            # Login Docker Hub na VM
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

            # Pull das imagens
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/expo_tech_front:blue
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/expo_tech_front:green

            # Levanta container green
            docker-compose up -d frontend-green

            # Recarrega Nginx
            docker exec frontend-proxy nginx -s reload

            # Remove antigo blue (primeiro deploy pode não existir)
            docker-compose rm -sf frontend-blue || true

            # Renomeia green para blue
            docker rename frontend-green frontend-blue

            echo "Deploy concluído: ${GITHUB_SHA}"
